#!/bin/bash
for v in "$@"
do
    if [ $v == "-bytecode" ]; then
	BYTECODE="1"
    else
	if [ ${v:0:12} == "-tezosprimedir=" ]; then
            INSTALLDIR=${v:12}
	    if [ ! -d $INSTALLDIR ]; then
		echo "$INSTALLDIR is not a directory"
	    fi
	else
	    if [ ${v:0:9} == "-datadir=" ]; then
		DATADIR=${v:9}
	    else
		if [ ${v:0:13} == "-genesistime=" ]; then
		    GENESISTIME=${v:13}
		else
		    if [ ${v:0:6} == "-seed=" ]; then
			SEED=${v:6}
		    else
			if [ ${v:0:12} = "-randomseed=" ]; then
			    RANDOMSEED=${v:12}
			else
			    echo "Unknown command line argument $v"
			    echo "configure can be given the following arguments:"
			    echo "-bytecode (to only build bytecode)"
			    echo "-tezosprimedir=<dir> (to specify the install directory)"
			    echo "-datadir=<dir> (to specify the default directory for Tezos' data)"
			    echo "-genesistime=<int> (to specify the genesis time stamp; regularly updated for the testnet)"
			    echo "-seed=<32 bytes as a hexstring> (to specify the seed that is hashed to determine the genesis stake modifiers)"
			    echo "-randomseed=<string> (a user provided string to seed OCaml's Random module)"
			    exit 1
			fi
		    fi
		fi
	    fi
	fi
    fi
done
if [ ! $DATADIR ]; then
    DATADIR=$HOME/.tezosprime
fi
if [ ! -d $DATADIR ]; then
  mkdir $DATADIR
fi
if [ ! -d $DATADIR/testnet ]; then
  mkdir $DATADIR/testnet
fi
echo let datadir = ref \"$DATADIR\" > src/config.ml
echo let testnet = ref false >> src/config.ml
echo let staking = ref false >> src/config.ml
echo let daemon = ref false >> src/config.ml
echo let offline = ref false >> src/config.ml
echo let ltcoffline = ref false >> src/config.ml
echo let ip = ref None >> src/config.ml
echo let ipv6 = ref false >> src/config.ml
echo let port = ref 20805 >> src/config.ml
echo let socks = ref None >> src/config.ml
echo let socksport = ref 9050 >> src/config.ml
echo let rpcuser = ref \"user\" >> src/config.ml
echo let rpcpass = ref \"changeme\" >> src/config.ml
echo let rpcport = ref 20810 >> src/config.ml
echo let ltcrpcport = ref 9332 >> src/config.ml
echo let ltcrpcuser = ref \"ltcuser\" >> src/config.ml
echo let ltcrpcpass = ref \"ltcpass\" >> src/config.ml
echo let ltcnotifyport = ref 20820 >> src/config.ml
echo let ltcaddresses = ref [] >> src/config.ml
echo let curl = ref \"/usr/bin/curl\" >> src/config.ml
echo let maxconns = ref 20 >> src/config.ml
echo let lastcheckpoint = ref \"\" >> src/config.ml
echo let ltcblockcheckpoint = ref \"\" >> src/config.ml
echo let prompt = ref \"\> \" >> src/config.ml
echo let offlinestakerewardsdest = ref false >> src/config.ml
echo let offlinestakerewardslock = ref None >> src/config.ml
echo let generatenewrewardaddresses = ref true >> src/config.ml
echo let stakewithrewards = ref false >> src/config.ml
echo let reward_lock_relative = ref None >> src/config.ml
echo let reward_lock_absolute = ref None >> src/config.ml
if [ $GENESISTIME ]; then
    echo let genesistimestamp = ref ${GENESISTIME}L >> src/config.ml
else
    echo let genesistimestamp = ref 1523203501L >> src/config.ml
fi
echo let maxburn = ref 0L >> src/config.ml
echo let maxburnrate = ref 0L >> src/config.ml
echo let ltctxfee = ref 10000L >> src/config.ml
echo let mintimebetweenburns = ref 0L >> src/config.ml
echo let minrelayfee = ref 0L >> src/config.ml
echo let burnifleq = ref 2 >> src/config.ml
echo let extraindex = ref false >> src/config.ml
if [ $SEED ]; then
    echo let seed = ref \"$SEED\" >> src/config.ml
else
    echo let seed = ref \"ffc12159965e55a2b334a83d2241bc25b409c14bf77c41eacf4a445556fe71b0\" >> src/config.ml
fi
if [ $RANDOMSEED ]; then
    echo let randomseed = ref \(Some \"$RANDOMSEED\"\) >> src/config.ml
else
    echo let randomseed = ref None >> src/config.ml
fi
echo let minconnstostake = ref 2 >> src/config.ml
if [ $BYTECODE ]; then
    if [ $INSTALLDIR ]; then
	echo "bytecode cannot be installed"
	echo "configure failed"
	exit 1
    fi
fi
OCAMLC=`which ocamlc`
if [ -z $OCAMLC ]; then
    echo 'Could not find ocamlc'
    echo 'configure failed'
    exit 1
fi
echo OCAMLC=$OCAMLC > Makefile
if [ $BYTECODE ]; then
    echo 'all: bytecode' >> Makefile
else
    OCAMLOPT=`which ocamlopt`
    if [ -z $OCAMLOPT ]; then
	echo 'Could not find ocamlopt'
	echo 'Only the bytecode will be created'
	BYTECODE=1
	INSTALLDIR=""
	echo 'all: bytecode' >> Makefile
    else
	echo OCAMLOPT=$OCAMLOPT >> Makefile
	echo 'all: opt' >> Makefile
    fi
fi
cat Makefile.in >> Makefile
if [ -z $INSTALLDIR ]; then
    if [ -d /usr/local/bin ]; then
	INSTALLDIR="/usr/local/bin"
    else
	if [ -d /usr/bin ]; then
	    INSTALLDIR="/usr/bin"
	else
	    echo 'No installation directory could be determined'
	    echo 'make install cannot be run'
	    echo 'To resolve this give -tezosprimedir=<dir> as an argument to configure.'
	fi
    fi
fi
if [ -n $INSTALLDIR ]; then
    echo INSTALLDIR=$INSTALLDIR >> Makefile
    echo '' >> Makefile
    echo 'install:' >> Makefile
    echo -e '\tcp bin/tezosprime $(INSTALLDIR)' >> Makefile
fi
